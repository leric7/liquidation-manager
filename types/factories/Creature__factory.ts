/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Creature, CreatureInterface } from "../Creature";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyRegistryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC712_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526006805460ff191690553480156200001b57600080fd5b506040516200231f3803806200231f8339810160408190526200003e9162000393565b60405180604001604052806008815260200167437265617475726560c01b815250604051806040016040528060038152602001624f534360e81b815250828282816000908051906020019062000096929190620002ed565b508051620000ac906001906020840190620002ed565b505050620000c9620000c36200011160201b60201c565b6200012d565b600b80546001600160a01b0319166001600160a01b038316179055620000fc600a6200017f602090811b62000db717901c565b620001078362000188565b5050505062000400565b600062000128620001ec60201b62000dc01760201c565b905090565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b60065460ff1615620001d15760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481a5b9a5d195960921b604482015260640160405180910390fd5b620001dc816200024b565b506006805460ff19166001179055565b6000333014156200024557600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620002489050565b50335b90565b6040518060800160405280604f8152602001620022d0604f9139805160209182012082519282019290922060408051808201825260018152603160f81b90840152805180840194909452838101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608401523060808401524660a0808501919091528151808503909101815260c090930190528151910120600755565b828054620002fb90620003c3565b90600052602060002090601f0160209004810192826200031f57600085556200036a565b82601f106200033a57805160ff19168380011785556200036a565b828001600101855582156200036a579182015b828111156200036a5782518255916020019190600101906200034d565b50620003789291506200037c565b5090565b5b808211156200037857600081556001016200037d565b600060208284031215620003a5578081fd5b81516001600160a01b0381168114620003bc578182fd5b9392505050565b600181811c90821680620003d857607f821691505b60208210811415620003fa57634e487b7160e01b600052602260045260246000fd5b50919050565b611ec080620004106000396000f3fe6080604052600436106101665760003560e01c80636352211e116100d1578063a22cb4651161008a578063d547cfb711610064578063d547cfb714610425578063e8a3d4851461043a578063e985e9c51461044f578063f2fde38b1461046f57600080fd5b8063a22cb465146103c5578063b88d4fde146103e5578063c87b56dd1461040557600080fd5b80636352211e1461031d57806370a082311461033d578063715018a61461035d578063755edd17146103725780638da5cb5b1461039257806395d89b41146103b057600080fd5b806318160ddd1161012357806318160ddd1461025c57806320379ee51461027f57806323b872dd146102945780632d0335ab146102b45780633408e470146102ea57806342842e0e146102fd57600080fd5b806301ffc9a71461016b57806306fdde03146101a0578063081812fc146101c2578063095ea7b3146101fa5780630c53c51c1461021c5780630f7e59701461022f575b600080fd5b34801561017757600080fd5b5061018b610186366004611a24565b61048f565b60405190151581526020015b60405180910390f35b3480156101ac57600080fd5b506101b56104e1565b6040516101979190611bb0565b3480156101ce57600080fd5b506101e26101dd366004611a78565b610573565b6040516001600160a01b039091168152602001610197565b34801561020657600080fd5b5061021a6102153660046119f9565b61060d565b005b6101b561022a36600461197e565b610735565b34801561023b57600080fd5b506101b5604051806040016040528060018152602001603160f81b81525081565b34801561026857600080fd5b5061027161091f565b604051908152602001610197565b34801561028b57600080fd5b50600754610271565b3480156102a057600080fd5b5061021a6102af3660046118a3565b61093b565b3480156102c057600080fd5b506102716102cf36600461184f565b6001600160a01b031660009081526008602052604090205490565b3480156102f657600080fd5b5046610271565b34801561030957600080fd5b5061021a6103183660046118a3565b610973565b34801561032957600080fd5b506101e2610338366004611a78565b61098e565b34801561034957600080fd5b5061027161035836600461184f565b610a05565b34801561036957600080fd5b5061021a610a8c565b34801561037e57600080fd5b5061021a61038d36600461184f565b610ae1565b34801561039e57600080fd5b506009546001600160a01b03166101e2565b3480156103bc57600080fd5b506101b5610b53565b3480156103d157600080fd5b5061021a6103e036600461194d565b610b62565b3480156103f157600080fd5b5061021a6104003660046118e3565b610b74565b34801561041157600080fd5b506101b5610420366004611a78565b610bb3565b34801561043157600080fd5b506101b5610bed565b34801561044657600080fd5b506101b5610c0d565b34801561045b57600080fd5b5061018b61046a36600461186b565b610c2d565b34801561047b57600080fd5b5061021a61048a36600461184f565b610cfd565b60006001600160e01b031982166380ac58cd60e01b14806104c057506001600160e01b03198216635b5e139f60e01b145b806104db57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546104f090611d0a565b80601f016020809104026020016040519081016040528092919081815260200182805461051c90611d0a565b80156105695780601f1061053e57610100808354040283529160200191610569565b820191906000526020600020905b81548152906001019060200180831161054c57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166105f15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106188261098e565b9050806001600160a01b0316836001600160a01b031614156106865760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105e8565b806001600160a01b0316610698610e1d565b6001600160a01b031614806106b457506106b48161046a610e1d565b6107265760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105e8565b6107308383610e27565b505050565b60408051606081810183526001600160a01b038816600081815260086020908152908590205484528301529181018690526107738782878787610e95565b6107c95760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b60648201526084016105e8565b6001600160a01b0387166000908152600860205260409020546107ed906001610f85565b6001600160a01b0388166000908152600860205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b9061083d90899033908a90611b3e565b60405180910390a1600080306001600160a01b0316888a604051602001610865929190611ad8565b60408051601f198184030181529082905261087f91611abc565b6000604051808303816000865af19150503d80600081146108bc576040519150601f19603f3d011682016040523d82523d6000602084013e6108c1565b606091505b5091509150816109135760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c0000000060448201526064016105e8565b98975050505050505050565b6000600161092c600a5490565b6109369190611cc7565b905090565b61094c610946610e1d565b82610f98565b6109685760405162461bcd60e51b81526004016105e890611c4a565b61073083838361106e565b61073083838360405180602001604052806000815250610b74565b6000818152600260205260408120546001600160a01b0316806104db5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105e8565b60006001600160a01b038216610a705760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105e8565b506001600160a01b031660009081526003602052604090205490565b610a94610e1d565b6001600160a01b0316610aaf6009546001600160a01b031690565b6001600160a01b031614610ad55760405162461bcd60e51b81526004016105e890611c15565b610adf600061120a565b565b610ae9610e1d565b6001600160a01b0316610b046009546001600160a01b031690565b6001600160a01b031614610b2a5760405162461bcd60e51b81526004016105e890611c15565b6000610b35600a5490565b9050610b45600a80546001019055565b610b4f828261125c565b5050565b6060600180546104f090611d0a565b610b4f610b6d610e1d565b8383611276565b610b85610b7f610e1d565b83610f98565b610ba15760405162461bcd60e51b81526004016105e890611c4a565b610bad84848484611345565b50505050565b6060610bbd610bed565b610bc683611378565b604051602001610bd7929190611b0f565b6040516020818303038152906040529050919050565b60606040518060600160405280602e8152602001611e25602e9139905090565b6060604051806060016040528060388152602001611e5360389139905090565b600b5460405163c455279160e01b81526001600160a01b03848116600483015260009281169190841690829063c45527919060240160206040518083038186803b158015610c7a57600080fd5b505afa158015610c8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb29190611a5c565b6001600160a01b03161415610ccb5760019150506104db565b6001600160a01b0380851660009081526005602090815260408083209387168352929052205460ff165b949350505050565b610d05610e1d565b6001600160a01b0316610d206009546001600160a01b031690565b6001600160a01b031614610d465760405162461bcd60e51b81526004016105e890611c15565b6001600160a01b038116610dab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e8565b610db48161120a565b50565b80546001019055565b600033301415610e1757600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610e1a9050565b50335b90565b6000610936610dc0565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e5c8261098e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006001600160a01b038616610efb5760405162461bcd60e51b815260206004820152602560248201527f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360448201526424a3a722a960d91b60648201526084016105e8565b6001610f0e610f0987611492565b61150f565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0016020604051602081039080840390855afa158015610f5c573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b6000610f918284611c9b565b9392505050565b6000818152600260205260408120546001600160a01b03166110115760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105e8565b600061101c8361098e565b9050806001600160a01b0316846001600160a01b0316148061104357506110438185610c2d565b80610cf55750836001600160a01b031661105c84610573565b6001600160a01b031614949350505050565b826001600160a01b03166110818261098e565b6001600160a01b0316146110e55760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105e8565b6001600160a01b0382166111475760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105e8565b611152600082610e27565b6001600160a01b038316600090815260036020526040812080546001929061117b908490611cc7565b90915550506001600160a01b03821660009081526003602052604081208054600192906111a9908490611c9b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610b4f82826040518060200160405280600081525061153f565b816001600160a01b0316836001600160a01b031614156112d85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105e8565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61135084848461106e565b61135c84848484611572565b610bad5760405162461bcd60e51b81526004016105e890611bc3565b60608161139c5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156113c657806113b081611d45565b91506113bf9050600a83611cb3565b91506113a0565b60008167ffffffffffffffff8111156113ef57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611419576020820181803683370190505b5090505b8415610cf55761142e600183611cc7565b915061143b600a86611d60565b611446906030611c9b565b60f81b81838151811061146957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061148b600a86611cb3565b945061141d565b6000604051806080016040528060438152602001611de260439139805160209182012083518483015160408087015180519086012090516114f2950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b600061151a60075490565b60405161190160f01b60208201526022810191909152604281018390526062016114f2565b6115498383611686565b6115566000848484611572565b6107305760405162461bcd60e51b81526004016105e890611bc3565b60006001600160a01b0384163b1561167b57836001600160a01b031663150b7a0261159b610e1d565b8786866040518563ffffffff1660e01b81526004016115bd9493929190611b73565b602060405180830381600087803b1580156115d757600080fd5b505af1925050508015611607575060408051601f3d908101601f1916820190925261160491810190611a40565b60015b611661573d808015611635576040519150601f19603f3d011682016040523d82523d6000602084013e61163a565b606091505b5080516116595760405162461bcd60e51b81526004016105e890611bc3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610cf5565b506001949350505050565b6001600160a01b0382166116dc5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105e8565b6000818152600260205260409020546001600160a01b0316156117415760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105e8565b6001600160a01b038216600090815260036020526040812080546001929061176a908490611c9b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600082601f8301126117d8578081fd5b813567ffffffffffffffff808211156117f3576117f3611da0565b604051601f8301601f19908116603f0116810190828211818310171561181b5761181b611da0565b81604052838152866020858801011115611833578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611860578081fd5b8135610f9181611db6565b6000806040838503121561187d578081fd5b823561188881611db6565b9150602083013561189881611db6565b809150509250929050565b6000806000606084860312156118b7578081fd5b83356118c281611db6565b925060208401356118d281611db6565b929592945050506040919091013590565b600080600080608085870312156118f8578081fd5b843561190381611db6565b9350602085013561191381611db6565b925060408501359150606085013567ffffffffffffffff811115611935578182fd5b611941878288016117c8565b91505092959194509250565b6000806040838503121561195f578182fd5b823561196a81611db6565b915060208301358015158114611898578182fd5b600080600080600060a08688031215611995578081fd5b85356119a081611db6565b9450602086013567ffffffffffffffff8111156119bb578182fd5b6119c7888289016117c8565b9450506040860135925060608601359150608086013560ff811681146119eb578182fd5b809150509295509295909350565b60008060408385031215611a0b578182fd5b8235611a1681611db6565b946020939093013593505050565b600060208284031215611a35578081fd5b8135610f9181611dcb565b600060208284031215611a51578081fd5b8151610f9181611dcb565b600060208284031215611a6d578081fd5b8151610f9181611db6565b600060208284031215611a89578081fd5b5035919050565b60008151808452611aa8816020860160208601611cde565b601f01601f19169290920160200192915050565b60008251611ace818460208701611cde565b9190910192915050565b60008351611aea818460208801611cde565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b60008351611b21818460208801611cde565b835190830190611b35818360208801611cde565b01949350505050565b6001600160a01b03848116825283166020820152606060408201819052600090611b6a90830184611a90565b95945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ba690830184611a90565b9695505050505050565b602081526000610f916020830184611a90565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611cae57611cae611d74565b500190565b600082611cc257611cc2611d8a565b500490565b600082821015611cd957611cd9611d74565b500390565b60005b83811015611cf9578181015183820152602001611ce1565b83811115610bad5750506000910152565b600181811c90821680611d1e57607f821691505b60208210811415611d3f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611d5957611d59611d74565b5060010190565b600082611d6f57611d6f611d8a565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610db457600080fd5b6001600160e01b031981168114610db457600080fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e61747572652968747470733a2f2f6372656174757265732d6170692e6f70656e7365612e696f2f6170692f63726561747572652f68747470733a2f2f6372656174757265732d6170692e6f70656e7365612e696f2f636f6e74726163742f6f70656e7365612d657263373231a26469706673582212204b38ff33fcf9afc22c6c003affdd1fe1333b095bc36e1fa72e501c6b4c0e399964736f6c63430008040033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429";

export class Creature__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _proxyRegistryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Creature> {
    return super.deploy(
      _proxyRegistryAddress,
      overrides || {}
    ) as Promise<Creature>;
  }
  getDeployTransaction(
    _proxyRegistryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_proxyRegistryAddress, overrides || {});
  }
  attach(address: string): Creature {
    return super.attach(address) as Creature;
  }
  connect(signer: Signer): Creature__factory {
    return super.connect(signer) as Creature__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreatureInterface {
    return new utils.Interface(_abi) as CreatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Creature {
    return new Contract(address, _abi, signerOrProvider) as Creature;
  }
}
